<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vueblog0</title>
      <link href="/2022/09/01/vueblog0/"/>
      <url>/2022/09/01/vueblog0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo+matery 博客搭建</title>
      <link href="/2022/08/31/hexo_Blogbuild/"/>
      <url>/2022/08/31/hexo_Blogbuild/</url>
      
        <content type="html"><![CDATA[<p>Windows githubpage博客懒人搭建过程（采用hexo框架+部署到github）</p><span id="more"></span><h1 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h1><h2 id="1、安装前环境"><a href="#1、安装前环境" class="headerlink" title="1、安装前环境"></a>1、安装前环境</h2><p>Node.js<br>Git<br>（都是最新的，反正官网可能大概或许只有一种选择）</p><h2 id="2、安装Hexo"><a href="#2、安装Hexo" class="headerlink" title="2、安装Hexo"></a>2、安装Hexo</h2><h3 id="2-1-安装cnpm"><a href="#2-1-安装cnpm" class="headerlink" title="2.1 安装cnpm"></a>2.1 安装cnpm</h3><p>Node.js安装好后，命令行直接输入，不用进入任何包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> cnpm <span class="token parameter variable">--registry</span><span class="token operator">==</span>https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明: -g 表示进行全局安装，–registry&#x3D;&#x3D;<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a> 表示使用淘宝镜像安装 cnpm<br>安装后验证: 在 cmd 中输入命令 cnpm -v, 可查看 cnpm 版本</p><h3 id="2-2-安装Hexo"><a href="#2-2-安装Hexo" class="headerlink" title="2.2 安装Hexo"></a>2.2 安装Hexo</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ cnpm <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明: -g 表示全局安装，hexo-cli 为所安装的包<br>安装后验证: 在 cmd 中输入命令 hexo -v, 可查看 hexo 版本</p><h2 id="3、配置Github"><a href="#3、配置Github" class="headerlink" title="3、配置Github"></a>3、配置Github</h2><h3 id="3-1-Github创建仓库"><a href="#3-1-Github创建仓库" class="headerlink" title="3.1 Github创建仓库"></a>3.1 Github创建仓库</h3><p>新建一个名为: <a href="http://username.github.io/">http://username.github.io</a> 的仓库(username 为您的 Github 用户名)注册邮箱建议是自己能正常使用的，要翻墙的邮箱收邮件有点麻烦。</p><h3 id="3-2-配置SSH免密登录"><a href="#3-2-配置SSH免密登录" class="headerlink" title="3.2 配置SSH免密登录"></a>3.2 配置SSH免密登录</h3><p>主要是解决本机和服务器连接问题，就不用靠着用户名和密码了<br>1、首先打开电脑文件夹，找到 C:\Users\您的用户名\ .ssh文件夹并删除(如果没有，则直接进入第二步)</p><p>2、在 C:\Users\您的用户名 文件夹下右键打开 Git Bash Here 输入命令: ssh-keygen -t rsa -C “你的github登录邮箱” 生成.ssh秘钥，输入后连敲三次回车（不用填任何东西，连按三次，按完后最后会有一个图片。</p><p>3、生成了一个新的 C:\Users\您的用户名\ .ssh文件夹，打开这个文件夹，找到 .ssh\id_rsa.pub 文件，记事本打开并复制里面的内容</p><p>4、打开您的 github 主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key，把复制的内容粘贴进去，title 随便填（其他都不用动，只需粘贴和改标题）保存即可，我们的公钥就添加成功了。</p><p>5、检测是否设置成功:</p><p>输入命令: </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果提示Are you sure you want to continue connecting (yes&#x2F;no)?，输入yes，然后会看到：</p><p>Hi 用户名! You’ve successfully authenticated, but GitHub does not provide shell access.<br>看到这个信息说明SSH已配置成功！ </p><p>6、git全局配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"liuxianan"</span>// 你的github用户名，非昵称$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email  <span class="token string">"xxx@qq.com"</span>// 填写你的github注册邮箱 $ <span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">-l</span> //查看<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4、hexo搭建博客"><a href="#4、hexo搭建博客" class="headerlink" title="4、hexo搭建博客"></a>4、hexo搭建博客</h2><h3 id="4-1-初始化"><a href="#4-1-初始化" class="headerlink" title="4.1 初始化"></a>4.1 初始化</h3><p>1、在你想要的位置新建一个文件（随便取，这就是以后你的博客，代码都在里边，主题修改，写文章都在里边，以后想移很麻烦）</p><p>2、文件夹里右键打开 Git Bash Here，输入hexo init 初始化 ，然后等文件自动下载</p><p>3、完成后，Git Bash Here里，直接hexo clean、hexo g<br>其中一步失败，回退之前的看有没有做漏，或者有没有删了source&#x2F;_post里的hello-world文件，或者百度<br>然后hexo s，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到内容 </p><h3 id="4-2-将博客部署到github个人主页上"><a href="#4-2-将博客部署到github个人主页上" class="headerlink" title="4.2 将博客部署到github个人主页上"></a>4.2 将博客部署到github个人主页上</h3><p>1、博客文件夹目录下 安装hexo-deployer-git </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不弄，到时候部署会报错</p><p>2、博客文件夹目录下的 _config.yml 文件 ，末尾修改为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Deployment</span><span class="token comment">## Docs: https://hexo.io/docs/one-command-deployment</span>deploy:  type: <span class="token function">git</span>  repository: github博客个人主页仓库code按钮下ssh链接  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、博客文件夹目录下，输入hexo d部署</p><p>4、浏览器输入对应域名即可访问</p><h2 id="5、主题修改"><a href="#5、主题修改" class="headerlink" title="5、主题修改"></a>5、主题修改</h2><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a> </p>]]></content>
      
      
      <categories>
          
          <category> hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/08/28/First/"/>
      <url>/2022/08/28/First/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>!</p><span id="more"></span> <h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="创建一个新文章"><a href="#创建一个新文章" class="headerlink" title="创建一个新文章"></a>创建一个新文章</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="运行本地站点"><a href="#运行本地站点" class="headerlink" title="运行本地站点"></a>运行本地站点</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo博客常用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
